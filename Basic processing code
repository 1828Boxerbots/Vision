// RobotVisison.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <opencv2/core.hpp>
#include <opencv2/cvconfig.h>
#include <opencv2/opencv.hpp>
#include <opencv2/imgproc.hpp>
#include <opencv2/videoio.hpp>

using namespace cv;

int main()
{
    Mat frame;
    Mat output;
    Mat colorFiliter;
    Mat closeFilter;
    Mat openFilter;
    VideoCapture video;

    double Area;
    double locatedX;

    Mat Morp = cv::getStructuringElement(MORPH_CROSS, Size(3, 3), Point(-1, 1));
    
    video.open(1);
  
   
    

    

 

    
    for (;;)
    {
        video >> frame;

        

        inRange(frame, Scalar(0, 0, 200), Scalar(120, 120, 255), colorFiliter);//BGR
        morphologyEx(colorFiliter, closeFilter, MORPH_CLOSE, Morp,Point(-1,-1),4);
        morphologyEx(closeFilter, openFilter, MORPH_OPEN, Morp, Point(-1, -1), 4);
       


        cv::Moments moment = cv::moments(openFilter);
        cv::Point center = cv::Point2f(moment.m10 / moment.m00, moment.m01 / moment.m00);

   

        Rect boundRect = boundingRect(openFilter);
        float ratio = (float)boundRect.width / boundRect.height;

        locatedX = center.x;

        rectangle(openFilter, Rect(center.x + -100 * ratio, center.y + -50 * ratio, ratio * 200,  ratio * 100), Scalar(255, 0, 0));

        
        
        output = openFilter;
        //std::cout << locatedX << std::endl;
        imshow("frame",frame);
       
        imshow("output", output);

        resizeWindow("frame", 640, 480);
        resizeWindow("output", 640, 480);

        if (frame.empty() || output.empty());
        if (cv::waitKey(20) == 27) break;

        if (locatedX < 270)
        {
           // std::cout << "left" << std::endl;
        }
        if(locatedX > 370)
        {
            //std::cout << "right" << std::endl;
        }
        if(locatedX < 370 && locatedX > 270)
        {
            //std::cout << "center" << std::endl;
        }

        //std::cout <<"x:" locatedX << std::endl;

        //std::cout << ratio << std::endl;
        
    }
    

}

// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started: 
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file
